{"version":3,"sources":["scripts/slider.js"],"names":["sliderCards","document","querySelectorAll","divSliderDots","querySelector","createSliderDots","i","length","insertAdjacentHTML","console","log","btnLeft","btnRight","sliderCardsCont","sliderWrapper","sliderDots","classList","add","style","transition","slideWidth","xStart","xEnd","xCurr","distanceX","outBounds","touchstartX","touchstartY","touchendX","touchendY","shownImage","setSlideWidth","window","innerWidth","slideToImage","manualSlideDist","arguments","undefined","transform","removeSliderDotActive","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","remove","err","e","f","slideToLeft","Math","floor","round","slideToRight","turnOnSliderDots","forEach","sliderDot","onclick","touchSlide","clientX","onmouseenter","ontouchstart","onmousedown","preventDefault","onmousemove","xDrag","onmouseup","onmouseleave","slider","handleGesture","addEventListener","event","changedTouches","screenX","screenY"],"mappings":"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","file":"slider.fc0468d4.js","sourceRoot":"../../assets/src","sourcesContent":["// создаём точки слайдера\nconst sliderCards = document.querySelectorAll('.slider__card');\nconst divSliderDots = document.querySelector('.slider__dots');\n\nfunction createSliderDots() {\n    let i = 0;\n    while (i < (sliderCards.length / 3)) {\n        // divSliderDots.appendChild(sliderDot); - не добавляет один и тот же элемент больше одного раза\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot\"></div>');\n        i++;\n        console.log(i);\n    }\n\n    // добавляем точки для версий сладера с двумя карточками на экране - в дополнение к уже созданным точкам. \n    // продолжаем счётчик i, отредактировав условие while - указав сколько точек должно быть в итоге \n    while (i < (sliderCards.length / 2)) {\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot slider__dot_2card\"></div>');\n        i++;\n        console.log(i);\n    }\n\n    // добавляем точки для версий сладера с одной карточкой на экране\n    while (i < sliderCards.length) {\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot slider__dot_1card\"></div>');\n        i++;\n        console.log(i);\n    }\n\n}\ncreateSliderDots();\n\n// функционал слайдера\nconst btnLeft = document.querySelector('.btn_arrow_l');\nconst btnRight = document.querySelector('.btn_arrow_r');\nconst sliderCardsCont = document.querySelector('.slider__cards-cont');\nconst sliderWrapper = document.querySelector('.slider__wrapper');\nlet sliderDots = document.querySelectorAll('.slider__dot');\n\n// делаем активной первую точку слайдера\nsliderDots[0].classList.add('slider__dot_active');\n\nsliderCardsCont.style.transition = '0.3s';\nsliderWrapper.style.transition = '0.3s';\n\nlet shownImage = 0; // задаём индекс отображаемой картинки (карточки) - (при загрузке страницы отображается первая карточка, её индекс 0 )\nlet slideWidth; // расстояние сдвига карточек при листании (ширина карточки + расстояние между карточками)\n\nfunction setSlideWidth() {\n    if (window.innerWidth < 375) {\n        slideWidth = 30 + 2.4; //ширина карточки + расстояние между карточками\n    } else if (window.innerWidth < 425) {\n        slideWidth = 35.4 + 2.4; //ширина карточки + расстояние между карточками\n    } else {\n        slideWidth = 38.4 + 2.4; //ширина карточки + расстояние между карточками\n    }\n}\nsetSlideWidth();\n\nfunction slideToImage(shownImage, manualSlideDist = 0) {\n    //смещаем внутреннюю обёртку карточек внутри внешней с overflow:hidden; (\"окошка\") \n    sliderWrapper.style.transform = 'translateX(' + ((-(shownImage * slideWidth)) + ((manualSlideDist) / 10)) + 'rem)';\n}\n\nfunction removeSliderDotActive() {\n    for (let sliderDot of sliderDots) {\n        sliderDot.classList.remove('slider__dot_active');\n    }\n}\n\nfunction slideToLeft() {\n    shownImage--; // уменьшаем индекс отображаемой картинки на 1 (т.к. мы листаем вправо)\n\n    // задаём на какую карточку при листании назад с первой краточки нужно будет переходить, в зависимости от ширины экрана (т.е. кол-ва отображаемых карточек в окне слайдера)\n    if (window.innerWidth < 825) {\n        if (shownImage < 0) {\n            shownImage = (sliderCards.length - 1);\n        };\n    } else if (window.innerWidth < 1250) {\n        if (shownImage < 0) {\n            shownImage = (sliderCards.length - 2);\n        };\n    } else if (shownImage < 0) {\n        shownImage = (sliderCards.length - 3);\n    };\n\n    console.log(shownImage);\n\n    setSlideWidth();\n    slideToImage(shownImage);\n\n    removeSliderDotActive();\n\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его)\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n        }\n        else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n}\n\nfunction slideToRight() {\n    shownImage++; // увеличиваем индекс отображаемой картинки на 1 (т.к. мы листаем вправо)\n    // задаём на какой карточке при листании вперёд нужно будет переходить к первой карточке, в зависимости от ширины экрана (т.е. кол-ва отображаемых карточек в окне слайдера)\n    if (window.innerWidth < 825) {\n        if (shownImage >= (sliderCards.length)) {\n            shownImage = 0;\n        }\n    } else if (window.innerWidth < 1250) {\n        if (shownImage >= (sliderCards.length - 1)) {\n            shownImage = 0;\n        }\n    } else if (shownImage >= (sliderCards.length - 2)) {\n        shownImage = 0;\n    }\n\n    setSlideWidth();\n    slideToImage(shownImage);\n\n    removeSliderDotActive();\n\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его)\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n\n        } else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n}\n\nbtnRight.onclick = slideToRight;\n\nbtnLeft.onclick = slideToLeft;\n\n\n\n\n// при наведении (вхождении курсора мыши - т.е. однократно) на контейнер с точками (divSliderDots - .slider__dots) в зависимости от window.innerWidth создаем массив только из отображаемых точек и присваиваем точкам (из вновь созданного массива sliderDots) действие перелистывания слайдера по клику:\nfunction turnOnSliderDots() {\n\n    removeSliderDotActive();\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его):\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n        }\n        else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n\n    // присваиваем точкам (из вновь созданного массива sliderDots) действие перелистывания слайдера по клику\n    sliderDots.forEach((sliderDot, i) => {\n        sliderDot.onclick = () => {\n            if (window.innerWidth < 825) {\n                shownImage = i;\n            } else if (window.innerWidth < 1250) {\n                shownImage = i * 2;\n            } else {\n                shownImage = i * 3;\n            }\n            setSlideWidth();\n            slideToImage(shownImage);\n\n            // убираем со всех точек класс slider__dot_active и вешаем его на ту точку, по которой кликнули\n            removeSliderDotActive();\n            sliderDots[i].classList.add('slider__dot_active');\n        }\n    });\n}\n\n// turnOnSliderDots();\n\ndivSliderDots.onmouseenter = turnOnSliderDots;\ndivSliderDots.ontouchstart = turnOnSliderDots;\n\n\n\n// touch slider\n\nlet xStart;\nlet xEnd;\nlet xCurr;\n// let xEndTouch;\nlet distanceX; // расстояние между нажатием и отжатием мышки\n// let distanceXTouch;\n\n// маркер что мы не отжали мышку над sliderWrapper а убрали указатель за его пределы\nlet outBounds;\n\nsliderWrapper.onmousedown = (e) => {\n    e.preventDefault(); // чтоб не перетягивалась картинка\n    // e.stopPropagation();\n    // console.log(e);\n    // console.log(e.clientX);\n    // console.log(e.clientY);\n    xStart = e.clientX;\n    // console.log(xStart);\n    outBounds = true;\n\n    sliderWrapper.style.transition = '0.016s';\n\n    setSlideWidth();\n    sliderWrapper.onmousemove = (e) => {\n        xCurr = e.clientX;\n        xDrag = xCurr - xStart;\n        // console.log(xDrag);\n        // console.log(((shownImage * slideWidth) - (xDrag / 10)));\n        sliderWrapper.style.transform = 'translateX(' + ((-(shownImage * slideWidth)) + (xDrag / 10)) + 'rem)';\n        // slideToImage(manualSlideDist = xDrag);\n    }\n}\n\nfunction touchSlide(e) {\n    //e.preventDefault(); // чтоб не перетягивалась картинка\n\n    xEnd = e.clientX;\n\n    // console.log(xEnd);\n    // console.log('distanceX = xEnd - xStart = ' + (xEnd - xStart));\n\n    distanceX = (xEnd - xStart);\n    // console.log(distanceX);\n\n\n    if (distanceX > 0) {\n        slideToLeft();\n    }\n    if (distanceX < -0) {\n        slideToRight();\n    }\n}\n\nsliderWrapper.onmouseup = (e) => {\n    outBounds = false;  // сбрасываем маркер что мышь не отчали над sliderWrapper\n    sliderWrapper.style.transition = '0.3s';\n    // touchSlide(e);\n    sliderWrapper.onmousemove = undefined;\n\n}\nsliderWrapper.onmouseleave = () => {\n    if (outBounds === true) {\n        if (xDrag > 0) {\n            slideToLeft();\n        }\n        if (xDrag < -0) {\n            slideToRight();\n        }\n        outBounds = false;  // т.к. мы уже выполнили необходимое действие, поэтому сбрасываем маркер что мышь не отчали над sliderWrapper\n        sliderWrapper.style.transition = '0.3s';\n\n        sliderWrapper.onmousemove = undefined;\n    }\n}\n\n\n\n// don't work on iPhone - ПЕРЕПРОВЕРИТЬ!!! - возможно не успел обновиться GitPages\n// sliderWrapper.addEventListener('touchstart', (e) => {\n//     e.preventDefault(); // чтоб не перетягивалась картинка\n//     xStart = e.clientX;\n//     console.log(xStart);\n// }, { passive: false });\n// sliderWrapper.addEventListener('touchmove', (e) => { touchSlide(e) }, { passive: false });\n// sliderWrapper.addEventListener('touchend', (e) => { touchSlide(e) }, { passive: false });\n\n\n\n//https://css-tricks.com/simple-swipe-with-vanilla-javascript/\n// https://codepen.io/thebabydino/pen/QQRwRy/\n\n//https://stackoverflow.com/questions/62823062/adding-a-simple-left-right-swipe-gesture\n\nlet touchstartX;\nlet touchstartY;\nlet touchendX;\nlet touchendY;\n\nconst slider = document.querySelector('.slider');\n\n// slider.style.background = 'red';\n\nslider.addEventListener('touchstart', function (event) {\n    touchstartX = event.changedTouches[0].screenX;\n    touchstartY = event.changedTouches[0].screenY;\n}, false);\n\n// попробовать двигать реалтайм  через touchmove!!\nslider.addEventListener('touchend', function (event) {\n    touchendX = event.changedTouches[0].screenX;\n    touchendY = event.changedTouches[0].screenY;\n    handleGesture();\n}, false);\n\n\nfunction handleGesture() {\n    if (touchendX < touchstartX) {\n        console.log('Swiped Left');\n        // alert('Swiped Left');\n        slideToRight();\n    }\n\n    if (touchendX > touchstartX) {\n        console.log('Swiped Right');\n        // alert('Swiped Right');\n        slideToLeft();\n    }\n\n    if (touchendY < touchstartY) {\n        console.log('Swiped Up');\n    }\n\n    if (touchendY > touchstartY) {\n        console.log('Swiped Down');\n    }\n\n    if (touchendY === touchstartY) {\n        console.log('Tap');\n    }\n}\n\n// Убрать БАГ с зависающим ховером на iPhone при перелистывании\n// не скролит строницу вверх/вниз по слуйдеру - исправить  - вернуть поведение по умолчанию ил  дописать действие через scrollBy(). "]}