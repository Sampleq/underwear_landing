{"version":3,"sources":["scripts/slider.js"],"names":["sliderCards","document","querySelectorAll","divSliderDots","querySelector","createSliderDots","i","length","insertAdjacentHTML","console","log","k","l","btnLeft","btnRight","sliderCardsCont","sliderWrapper","sliderDots","classList","add","style","transition","slideWidth","shownImage","setSlideWidth","window","innerWidth","slideToImage","transform","onclick","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","remove","err","e","f","Math","floor","round","_step2","_iterator2","onmouseenter","_step3","_iterator3","forEach","sliderDot","_step4","_iterator4","_step5","_iterator5","_step6","_iterator6"],"mappings":"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","file":"slider.88ad520f.js","sourceRoot":"../../assets/src","sourcesContent":["// создаём точки слайдера\nconst sliderCards = document.querySelectorAll('.slider__card');\nconst divSliderDots = document.querySelector('.slider__dots');\n\n// не используется т.к. метод  .appendChild не добавляет один и тот же элемент больше одного раза\n// const sliderDot = document.createElement('div');\n// // sliderDot.id = 'test';\n// sliderDot.classList.add('slider__dot');\n// // document.body.appendChild(sliderDot);\n\nfunction createSliderDots() {\n    let i = 0;\n    while (i < (sliderCards.length / 3)) {\n        // divSliderDots.appendChild(sliderDot); - не добавляет один и тот же элемент больше одного раза\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot\"></div>');\n        i++;\n        console.log(i);\n    }\n\n    // добавляем точки для версий сладера с двумя карточками на экране - в дополнение к уже созданным точкам. \n    //создаём новый счётчик для цикла. (или можно попробовать обнулить i после прекращения выполнения предудущего цикла. Или продолжить счётчик i, отредактировав условие while)\n    let k = 0;\n    while (k < ((sliderCards.length / 2) - (sliderCards.length / 3))) {\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot slider__dot_2card\"></div>');\n        k++;\n        console.log(k);\n    }\n\n    // добавляем точки для версий сладера с одной карточкой на экране\n    let l = 0;\n    // while (l < (sliderCards.length - (sliderCards.length / 3) - ((sliderCards.length / 2) - (sliderCards.length / 3)))) {\n    while (l < (sliderCards.length / 2)) {\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot slider__dot_1card\"></div>');\n        l++;\n        console.log(l);\n    }\n\n}\ncreateSliderDots();\n\n// функционал слайдера\nconst btnLeft = document.querySelector('.btn_arrow_l');\nconst btnRight = document.querySelector('.btn_arrow_r');\nconst sliderCardsCont = document.querySelector('.slider__cards-cont');\nconst sliderWrapper = document.querySelector('.slider__wrapper');\nlet sliderDots = document.querySelectorAll('.slider__dot');\n\n// делаем активной первую точку слайдера\nsliderDots[0].classList.add('slider__dot_active');\n\nsliderCardsCont.style.transition = '0.3s';\nsliderWrapper.style.transition = '0.3s';\n\nlet shownImage = 0; //задаём индекс отображаемой картинки (карточки) - (при загрузке страницы отображается первая карточка, её индекс 0 )\nlet slideWidth; // расстояние сдвига карточек при листании (ширина карточки + расстояние между карточками)\n\nfunction setSlideWidth() {\n    if (window.innerWidth < 375) {\n        slideWidth = 30 + 2.4; //ширина карточки + расстояние между карточками\n    } else if (window.innerWidth < 425) {\n        slideWidth = 35.4 + 2.4; //ширина карточки + расстояние между карточками\n    } else {\n        slideWidth = 38.4 + 2.4; //ширина карточки + расстояние между карточками\n    }\n}\n\nfunction slideToImage(shownImage) {\n    //смещаем внутреннюю обёртку карточек внутри внешней с overflow:hidden; (\"окошка\") \n    sliderWrapper.style.transform = 'translateX(-' + (shownImage * slideWidth) + 'rem)';\n}\n\n\nbtnRight.onclick = () => {\n    // \n    shownImage++;\n    // задаём на какой карточке при листании вперёд нужно будет переходить к первой карточке, в зависимости от ширины экрана (т.е. кол-ва отображаемых карточек в окне слайдера)\n    if (window.innerWidth < 825) {\n        if (shownImage >= (sliderCards.length)) {\n            shownImage = 0;\n        }\n    } else if (window.innerWidth < 1250) {\n        if (shownImage >= (sliderCards.length - 1)) {\n            shownImage = 0;\n        }\n    } else if (shownImage >= (sliderCards.length - 2)) {\n        shownImage = 0;\n    }\n\n    setSlideWidth();\n    slideToImage(shownImage);\n\n    for (let sliderDot of sliderDots) {\n        sliderDot.classList.remove('slider__dot_active');\n    }\n\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его)\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n\n        } else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n}\n\nbtnLeft.onclick = () => {\n    shownImage--;\n\n    // задаём на какую карточку при листании назад с первой краточки нужно будет переходить, в зависимости от ширины экрана (т.е. кол-ва отображаемых карточек в окне слайдера)\n    if (window.innerWidth < 825) {\n        if (shownImage < 0) {\n            shownImage = (sliderCards.length - 1);\n        };\n    } else if (window.innerWidth < 1250) {\n        if (shownImage < 0) {\n            shownImage = (sliderCards.length - 2);\n        };\n    } else if (shownImage < 0) {\n        shownImage = (sliderCards.length - 3);\n    };\n\n    console.log(shownImage);\n\n    setSlideWidth();\n    slideToImage(shownImage);\n\n    for (let sliderDot of sliderDots) {\n        sliderDot.classList.remove('slider__dot_active');\n    }\n\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его)\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n        }\n        else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n}\n\n\n// при наведении (вхождении курсора мыши - т.е. однократно) на контейнер с точками (divSliderDots - .slider__dots) в зависимости от window.innerWidth создаем массив только из отображаемых точек и присваиваем точкам (из вновь созданного массива sliderDots) действие перелистывания слайдера по клику:\ndivSliderDots.onmouseenter = () => {\n\n    for (let sliderDot of sliderDots) {\n        sliderDot.classList.remove('slider__dot_active');\n    }\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его):\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n        }\n        else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n\n    // присваиваем точкам (из вновь созданного массива sliderDots) действие перелистывания слайдера по клику\n\n    if (window.innerWidth < 825) {\n        sliderDots.forEach((sliderDot, i) => {\n            sliderDot.onclick = () => {\n                shownImage = i;\n                setSlideWidth();\n                slideToImage(shownImage);\n\n                // убираем со всех точек класс slider__dot_active и вешаем его на ту точку, по которой кликнули\n                // вынести в отдельную функцию\n                for (let sliderDot of sliderDots) {\n                    sliderDot.classList.remove('slider__dot_active');\n                }\n                sliderDots[i].classList.add('slider__dot_active');\n            }\n        });\n    }\n    else if (window.innerWidth < 1250) {\n        sliderDots.forEach((sliderDot, i) => {\n            sliderDot.onclick = () => {\n                shownImage = i * 2;\n\n                setSlideWidth();\n                slideToImage(shownImage);\n\n                // убираем со всех точек класс slider__dot_active и вешаем его на ту точку, по которой кликнули\n                // вынести в отдельную функцию\n                for (let sliderDot of sliderDots) {\n                    sliderDot.classList.remove('slider__dot_active');\n                }\n                sliderDots[i].classList.add('slider__dot_active');\n            }\n        })\n    } else {\n        sliderDots.forEach((sliderDot, i) => {\n            sliderDot.onclick = () => {\n                shownImage = i * 3;\n\n                setSlideWidth();\n                slideToImage(shownImage);\n\n                // убираем со всех точек класс slider__dot_active и вешаем его на ту точку, по которой кликнули\n                // вынести в отдельную функцию\n                for (let sliderDot of sliderDots) {\n                    sliderDot.classList.remove('slider__dot_active');\n                }\n                sliderDots[i].classList.add('slider__dot_active');\n            }\n        });\n    }\n}\n\n\n\n\n// sliderDots.forEach((sliderDot, i) => {\n//     sliderDot.onclick = () => {\n//         shownImage = i * 3;\n\n//         setSlideWidth();\n//         slideToImage(shownImage);\n\n//         // убираем со всех точек класс slider__dot_active и вешаем его на ту точку, по которой кликнули\n//         // вынести в отдельную функцию\n//         for (let sliderDot of sliderDots) {\n//             sliderDot.classList.remove('slider__dot_active');\n//         }\n//         sliderDots[i].classList.add('slider__dot_active');\n//     }\n// })\n\n\n"]}