{"version":3,"sources":["scripts/bg-mouse-move-logo.js"],"names":["logoWebkit","document","querySelector","logoMixBlend","logoTranspMaskImg","moveBg","element","onmousemove","event","style","backgroundPosition","clientX","clientY","backgroundSize","observer","IntersectionObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","isIntersecting","intersectionRatio","target","undefined","err","e","f","threshold","observe"],"mappings":";AAoCmC,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,IAAA,EAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,GAAA,iBAAA,EAAA,OAAA,CAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,KAAA,IAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApCnC,IAAMA,EAAaC,SAASC,cAAc,eACpCC,EAAeF,SAASC,cAAc,wBACtCE,EAAoBH,SAASC,cAAc,+BAGjD,SAASG,EAAOC,GACZL,SAASM,YAAc,SAAUC,GAC7BF,EAAQG,MAAMC,mBAAsB,GAAU,EAAMF,EAAMG,QAAU,IAAQ,MAAQ,GAAU,IAAMH,EAAMI,QAAU,KAAQ,IAC5HN,EAAQG,MAAMI,eAAkB,MAAaL,EAAMG,QAAU,IAAO,EAAKH,EAAMI,QAAU,IAAQ,KAUzG,IAAME,EAAW,IAAIC,qBACjB,SAAUC,GAAS,IACUC,EADVC,EAAAC,EACGH,GAAO,IAAzB,IAAAE,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA2B,CAAA,IAAlBC,EAAKN,EAAAO,MACND,EAAME,eAEFF,EAAMG,kBAAoB,IAE1BrB,EAAOkB,EAAMI,QAGjB1B,SAASM,iBAAcqB,GAE9BC,MAAAA,GAAAX,EAAAY,EAAAD,GAAA,QAAAX,EAAAa,MACF,CAAEC,UAAW,CAAC,EAAG,GAAK,KAG7BlB,EAASmB,QAAQjC,GACjBc,EAASmB,QAAQ9B,GACjBW,EAASmB,QAAQ7B","file":"bg-mouse-move-logo.547ba168.js","sourceRoot":"../../assets/src","sourcesContent":["const logoWebkit = document.querySelector('.main__logo');\nconst logoMixBlend = document.querySelector('.main__logo_mixblend');\nconst logoTranspMaskImg = document.querySelector('.main__logo_transp-mask-img');\n\n\nfunction moveBg(element) {\n    document.onmousemove = function (event) {\n        element.style.backgroundPosition = (78 - 7 + (1.0 * event.clientX / 100)) + '% ' + (70 - 4 + (1.5 * event.clientY / 100)) + '%';\n        element.style.backgroundSize = (135 - 3.5 + (event.clientX / 400) + 2 - (event.clientY / 400)) + '%';\n    }\n}\n\n// \"примеряемся\" )\n// logoWebkit.onclick = function () {\n//     moveBg(this);\n// };\n\n\nconst observer = new IntersectionObserver(\n    function (entries) {\n        for (let entry of entries) {\n            if (entry.isIntersecting) {\n                // применяем действие только когда больше половины (0.5) entry будет в зоне видимости - это убирает глюк, когда обе entry видны на экране\n                if (entry.intersectionRatio > 0.5) {\n                    // console.log(entry.target);\n                    moveBg(entry.target);\n                }\n            } else {\n                document.onmousemove = undefined;\n            }\n        }\n    }, { threshold: [0, 0.5, 1] }\n)\n//  добавляем объекты для наблюдения (после объявления самого const observer)\nobserver.observe(logoWebkit);\nobserver.observe(logoMixBlend);\nobserver.observe(logoTranspMaskImg);"]}