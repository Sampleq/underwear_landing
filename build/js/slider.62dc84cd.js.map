{"version":3,"sources":["scripts/slider.js"],"names":["sliderCards","document","querySelectorAll","divSliderDots","querySelector","createSliderDots","i","length","insertAdjacentHTML","console","log","btnLeft","btnRight","sliderCardsCont","sliderWrapper","sliderDots","classList","add","style","transition","slideWidth","xStart","xEnd","xEndTouch","distanceX","distanceXTouch","touchstartX","touchstartY","touchendX","touchendY","shownImage","setSlideWidth","window","innerWidth","slideToImage","transform","removeSliderDotActive","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","remove","err","e","f","slideLeft","Math","floor","round","slideRight","turnOnSliderDots","forEach","sliderDot","onclick","touchSlide","preventDefault","clientX","handleGesture","onmouseenter","ontouchstart","onmousedown","onmouseup","addEventListener","event","changedTouches","screenX","screenY"],"mappings":"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","file":"slider.62dc84cd.js","sourceRoot":"../../assets/src","sourcesContent":["// создаём точки слайдера\nconst sliderCards = document.querySelectorAll('.slider__card');\nconst divSliderDots = document.querySelector('.slider__dots');\n\nfunction createSliderDots() {\n    let i = 0;\n    while (i < (sliderCards.length / 3)) {\n        // divSliderDots.appendChild(sliderDot); - не добавляет один и тот же элемент больше одного раза\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot\"></div>');\n        i++;\n        console.log(i);\n    }\n\n    // добавляем точки для версий сладера с двумя карточками на экране - в дополнение к уже созданным точкам. \n    // продолжаем счётчик i, отредактировав условие while - указав сколько точек должно быть в итоге \n    while (i < (sliderCards.length / 2)) {\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot slider__dot_2card\"></div>');\n        i++;\n        console.log(i);\n    }\n\n    // добавляем точки для версий сладера с одной карточкой на экране\n    while (i < sliderCards.length) {\n        divSliderDots.insertAdjacentHTML(\"beforeend\", '<div class=\"slider__dot slider__dot_1card\"></div>');\n        i++;\n        console.log(i);\n    }\n\n}\ncreateSliderDots();\n\n// функционал слайдера\nconst btnLeft = document.querySelector('.btn_arrow_l');\nconst btnRight = document.querySelector('.btn_arrow_r');\nconst sliderCardsCont = document.querySelector('.slider__cards-cont');\nconst sliderWrapper = document.querySelector('.slider__wrapper');\nlet sliderDots = document.querySelectorAll('.slider__dot');\n\n// делаем активной первую точку слайдера\nsliderDots[0].classList.add('slider__dot_active');\n\nsliderCardsCont.style.transition = '0.3s';\nsliderWrapper.style.transition = '0.3s';\n\nlet shownImage = 0; // задаём индекс отображаемой картинки (карточки) - (при загрузке страницы отображается первая карточка, её индекс 0 )\nlet slideWidth; // расстояние сдвига карточек при листании (ширина карточки + расстояние между карточками)\n\nfunction setSlideWidth() {\n    if (window.innerWidth < 375) {\n        slideWidth = 30 + 2.4; //ширина карточки + расстояние между карточками\n    } else if (window.innerWidth < 425) {\n        slideWidth = 35.4 + 2.4; //ширина карточки + расстояние между карточками\n    } else {\n        slideWidth = 38.4 + 2.4; //ширина карточки + расстояние между карточками\n    }\n}\n\nfunction slideToImage(shownImage) {\n    //смещаем внутреннюю обёртку карточек внутри внешней с overflow:hidden; (\"окошка\") \n    sliderWrapper.style.transform = 'translateX(-' + (shownImage * slideWidth) + 'rem)';\n}\n\nfunction removeSliderDotActive() {\n    for (let sliderDot of sliderDots) {\n        sliderDot.classList.remove('slider__dot_active');\n    }\n}\n\nfunction slideLeft() {\n    shownImage--; // уменьшаем индекс отображаемой картинки на 1 (т.к. мы листаем вправо)\n\n    // задаём на какую карточку при листании назад с первой краточки нужно будет переходить, в зависимости от ширины экрана (т.е. кол-ва отображаемых карточек в окне слайдера)\n    if (window.innerWidth < 825) {\n        if (shownImage < 0) {\n            shownImage = (sliderCards.length - 1);\n        };\n    } else if (window.innerWidth < 1250) {\n        if (shownImage < 0) {\n            shownImage = (sliderCards.length - 2);\n        };\n    } else if (shownImage < 0) {\n        shownImage = (sliderCards.length - 3);\n    };\n\n    console.log(shownImage);\n\n    setSlideWidth();\n    slideToImage(shownImage);\n\n    removeSliderDotActive();\n\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его)\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n        }\n        else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n}\n\nfunction slideRight() {\n    shownImage++; // увеличиваем индекс отображаемой картинки на 1 (т.к. мы листаем вправо)\n    // задаём на какой карточке при листании вперёд нужно будет переходить к первой карточке, в зависимости от ширины экрана (т.е. кол-ва отображаемых карточек в окне слайдера)\n    if (window.innerWidth < 825) {\n        if (shownImage >= (sliderCards.length)) {\n            shownImage = 0;\n        }\n    } else if (window.innerWidth < 1250) {\n        if (shownImage >= (sliderCards.length - 1)) {\n            shownImage = 0;\n        }\n    } else if (shownImage >= (sliderCards.length - 2)) {\n        shownImage = 0;\n    }\n\n    setSlideWidth();\n    slideToImage(shownImage);\n\n    removeSliderDotActive();\n\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его)\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n\n        } else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n}\n\nbtnRight.onclick = slideRight;\n\nbtnLeft.onclick = slideLeft;\n\n\n\n\n// при наведении (вхождении курсора мыши - т.е. однократно) на контейнер с точками (divSliderDots - .slider__dots) в зависимости от window.innerWidth создаем массив только из отображаемых точек и присваиваем точкам (из вновь созданного массива sliderDots) действие перелистывания слайдера по клику:\nfunction turnOnSliderDots() {\n\n    removeSliderDotActive();\n    // в зависимости от ширины экрана (и кол-ва отображаемых точек) добавляем только отображаемые точки в массив (перезаписывая его):\n    // for 1-card slider (window.innerWidth < 825)\n    if (window.innerWidth < 825) {\n        sliderDots = divSliderDots.querySelectorAll('.slider__dot');\n        console.log(sliderDots);\n        sliderDots[shownImage].classList.add('slider__dot_active');\n    }\n    else\n        // for 2-card slider (window.innerWidth < 1250)\n        if (window.innerWidth < 1250) {\n            sliderDots = divSliderDots.querySelectorAll('.slider__dot:not(.slider__dot_1card)');\n            console.log(sliderDots);\n            sliderDots[Math.floor(shownImage / 2)].classList.add('slider__dot_active');\n        }\n        else {\n            // for 3-card slider (window.innerWidth > 1250)\n            sliderDots = divSliderDots.querySelectorAll(\".slider__dot:not(.slider__dot_2card):not(.slider__dot_1card)\");\n            console.log(sliderDots);\n            sliderDots[Math.round(shownImage / 3)].classList.add('slider__dot_active');\n        }\n\n    // присваиваем точкам (из вновь созданного массива sliderDots) действие перелистывания слайдера по клику\n    sliderDots.forEach((sliderDot, i) => {\n        sliderDot.onclick = () => {\n            if (window.innerWidth < 825) {\n                shownImage = i;\n            } else if (window.innerWidth < 1250) {\n                shownImage = i * 2;\n            } else {\n                shownImage = i * 3;\n            }\n            setSlideWidth();\n            slideToImage(shownImage);\n\n            // убираем со всех точек класс slider__dot_active и вешаем его на ту точку, по которой кликнули\n            removeSliderDotActive();\n            sliderDots[i].classList.add('slider__dot_active');\n        }\n    });\n}\n\n// turnOnSliderDots();\n\ndivSliderDots.onmouseenter = turnOnSliderDots;\ndivSliderDots.ontouchstart = turnOnSliderDots;\n\n\n\n// touch slider\n\nlet xStart;\nlet xEnd;\nlet xEndTouch;\nlet distanceX;\nlet distanceXTouch;\n\nsliderWrapper.onmousedown = (e) => {\n    e.preventDefault(); // чтоб не перетягивалась картинка\n    // e.stopPropagation();\n    // console.log(e);\n    // console.log(e.clientX);\n    // console.log(e.clientY);\n    xStart = e.clientX;\n    console.log(xStart);\n}\nsliderWrapper.ontouchstart = (e) => {\n    e.preventDefault(); // чтоб не перетягивалась картинка\n    // e.stopPropagation();\n    // console.log(e);\n    // console.log(e.clientX);\n    // console.log(e.clientY);\n    xStart = e.clientX;\n    console.log(xStart);\n}\n\nfunction touchSlide(e) {\n    e.preventDefault(); // чтоб не перетягивалась картинка\n    // e.stopPropagation();\n    // console.log(e);\n    // console.log(e.clientX);\n    // console.log(e.clientY);\n    xEnd = e.clientX;\n    console.log(xEnd);\n\n    console.log('distanceX = xEnd - xStart = ' + (xEnd - xStart));\n\n    distanceX = (xEnd - xStart);\n    console.log(distanceX);\n\n\n    if (distanceX > 10) {\n        slideLeft();\n    }\n    if (distanceX < -10) {\n        slideRight();\n    }\n}\n\nsliderWrapper.onmouseup = (e) => {\n    touchSlide(e);\n}\n// sliderWrapper.addEventListener('mouseup', (e) => { touchSlide(e) }, { passive: false });\n// sliderWrapper.addEventListener('mousemove', (e) => { touchSlide(e) }, { passive: false });\n\n\n// don't work on iPhone - ПЕРЕПРОВЕРИТЬ!!! - возможно не успел обновиться GitPages\n// sliderWrapper.addEventListener('touchstart', (e) => { touchSlide(e) }, { passive: false });\n// sliderWrapper.addEventListener('touchmove', (e) => { touchSlide(e) }, { passive: false });\n\n\n//https://stackoverflow.com/questions/62823062/adding-a-simple-left-right-swipe-gesture\n\nlet touchstartX;\nlet touchstartY;\nlet touchendX;\nlet touchendY;\n\nsliderWrapper.addEventListener('touchstart', function (event) {\n    touchstartX = event.changedTouches[0].screenX;\n    touchstartY = event.changedTouches[0].screenY;\n}, false);\n\nsliderWrapper.addEventListener('touchend', function (event) {\n    touchendX = event.changedTouches[0].screenX;\n    touchendY = event.changedTouches[0].screenY;\n    handleGesture();\n}, false);\n\n\nfunction handleGesture() {\n    if (touchendX < touchstartX) {\n        console.log('Swiped Left');\n        // alert('Swiped Left');\n        slideLeft();\n    }\n\n    if (touchendX > touchstartX) {\n        console.log('Swiped Right');\n        // alert('Swiped Right');\n        slideRight();\n    }\n\n    if (touchendY < touchstartY) {\n        console.log('Swiped Up');\n    }\n\n    if (touchendY > touchstartY) {\n        console.log('Swiped Down');\n    }\n\n    if (touchendY === touchstartY) {\n        console.log('Tap');\n    }\n}"]}