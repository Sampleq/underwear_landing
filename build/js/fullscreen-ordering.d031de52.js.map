{"version":3,"sources":["scripts/fullscreen-ordering.js"],"names":["orderingImgCont","document","querySelector","orderingImgContOuter","ordering","orderingOuter","footer","html","enterFullscreenSection","window","innerHeight","offsetHeight","style","scrollPaddingTop","transition","height","scrollIntoView","block","setTimeout","scrollBehavior","backgroundColor","addEventListener","exitFullscreenSection","once","concat","removeProperty"],"mappings":";AACA,IAAMA,EAAkBC,SAASC,cAAc,uBACzCC,EAAuBF,SAASC,cAAc,6BAC9CE,EAAWH,SAASC,cAAc,aAClCG,EAAgBJ,SAASC,cAAc,mBACvCI,EAASL,SAASC,cAAc,WAKhCK,EAAON,SAASC,cAAc,SAEpC,SAASM,IAEDC,OAAOC,YAAcN,EAASO,cAG9BJ,EAAKK,MAAMC,iBAAmB,EAE9BT,EAASQ,MAAME,WAAa,OAG5BR,EAAOM,MAAMG,OAAS,SAGtBX,EAASY,eAAe,CAAEC,MAAO,WAGjCC,WAAW,WAEPX,EAAKK,MAAMO,eAAiB,OAC5Bd,EAAcO,MAAMG,OAAS,QAI7BV,EAAcW,eAAe,CAAEC,MAAO,WAItCb,EAASQ,MAAMG,OAAS,QAGxBX,EAASQ,MAAMQ,gBAAkB,4BAIjCjB,EAAqBkB,iBAAiB,aAAcC,EAAuB,CAAEC,MAAM,IAKnFhB,EAAKK,MAAMO,eAAiB,SAG5Bb,EAAOM,MAAMG,OAAMS,GAAAA,OAAM,MAAoBf,OAAOC,YAAe,OACpE,OAGHN,EAASY,eAAe,CAAEC,MAAO,WACjCjB,EAAgBqB,iBAAiB,aAAcb,EAAwB,CAAEe,MAAM,KAOvF,SAASD,IAELhB,EAAOM,MAAME,WAAa,OAC1BR,EAAOM,MAAMG,OAAS,SAGtBR,EAAKK,MAAMO,eAAiB,SAK5Bd,EAAcW,eAAe,CAAEC,MAAO,WAGtCC,WAAW,WAEPd,EAASQ,MAAMa,eAAe,UAE9BrB,EAASQ,MAAMQ,gBAAkB,4BAGjCpB,EAAgBqB,iBAAiB,aAAcb,EAAwB,CAAEe,MAAM,IAM/EL,WAAW,WAEPX,EAAKK,MAAMO,eAAiB,OAC5Bd,EAAcO,MAAMa,eAAe,UACnCrB,EAASY,eAAe,CAAEC,MAAO,WAIjCX,EAAOM,MAAMG,OAAMS,GAAAA,OAAM,MAAoBf,OAAOC,YAAe,MAGnEH,EAAKK,MAAMO,eAAiB,UAC7B,MACJ,KA1CPnB,EAAgBqB,iBAAiB,aAAcb,EAAwB,CAAEe,MAAM","file":"fullscreen-ordering.d031de52.js","sourceRoot":"../../assets/src","sourcesContent":["\nconst orderingImgCont = document.querySelector('.ordering__img-cont');\nconst orderingImgContOuter = document.querySelector('.ordering__img-cont-outer');\nconst ordering = document.querySelector('.ordering');\nconst orderingOuter = document.querySelector('.ordering-outer');\nconst footer = document.querySelector('.footer');\n\n// ! selecting an <html> tag element - 3 ways:\n// const html = document.getElementsByTagName('html')[0];\n// const html = document.body.parentNode;\nconst html = document.querySelector(':root');\n\nfunction enterFullscreenSection() {\n    // применяем разворачивание секции ordering на весь экран только если высота экрана больше высоты секции ordering\n    if (window.innerHeight > ordering.offsetHeight) {\n\n        // убираем паддинг прокрутки до элемента\n        html.style.scrollPaddingTop = 0;\n        // задаем плавность перехода блока с фоном (ordering)\n        ordering.style.transition = '0.5s';\n\n        // из CSS ((100vh - 55vh) / 2) = 22.5vh . 55vh - это высота ordering (и orderingOuter)\n        footer.style.height = '22.5vh';\n\n        // скроллим блок с фоном (ordering) в центр экрана\n        ordering.scrollIntoView({ block: \"center\" });\n\n        //задаём отсрочку в 0.5 секунды чтобы страница успела проскроллиться до блока с фоном (ordering) и/или отыгралась анимация увеличения картинки, после этого делаем анимацию разворачивания\n        setTimeout(() => {\n            // убираем плавность прокрутки (скроллинга) страницы, разворачиваем блок-обёртку на всю высоту экрана и cкроллим блок обертку в центр экрана (т.е. он займёт весь экран) - все эти (три) действия происходят мгновенно - пользователь видит на экране только появление контента соседних блоков\n            html.style.scrollBehavior = 'auto';\n            orderingOuter.style.height = '100vh';\n            //  убрал - т.к. это работало без глюка только до 1280х800\n            // window.scrollBy(0, ((window.innerHeight - ordering.offsetHeight) / 2));\n            // !!! нужно временно добавить высоты футеру ( и с задержкой убрать в этой же функции) чтобы не было \"скачка\" на больших разрешениях, где нельзя промотать ordering.scrollIntoView({ block: \"center\" }); ( добавлять до line 22) в центр экрана !!!\n            orderingOuter.scrollIntoView({ block: \"center\" });\n\n\n            // разворачиваем блок с фоном (ordering) на всю высоту экрана (происходит с анимацией благодаря раннее присвоинному transition)\n            ordering.style.height = '100vh';\n\n            // делаем фоновую картинку более ясно видимой\n            ordering.style.backgroundColor = 'rgba(240, 237, 243, 0.75)';\n\n            // orderingImgCont.addEventListener('mouseleave', exitFullscreenSection, { once: true });\n            // вешаем слушатель события на блок-обёртку контейнера картинки (у него высота 100% родителя) - чтоб не было зацикленного разворачивания сворачивания при определённном положении курсора мыши и скролла страницы\n            orderingImgContOuter.addEventListener('mouseleave', exitFullscreenSection, { once: true });\n\n            // не БАГ а ФИЧА - если быстро (быстрее 0.5сек) убрать курсор с картинки - блок с фоном (ordering) останется развёрнутым на весь экран, при повторном наведении и убирании блок с фоном сворачивается - это не ломает сайт - оставил такую возможность пользователю обнаружить и совершать такое \"переключение\") \n\n            // возвращаем плавность скролла - на случай если пользователь будет пользоваться сайтом после использования \"переключения\" багофичей)\n            html.style.scrollBehavior = 'smooth';\n\n            // возвращаем футер к нормальному размеру, пересчитывая высоту по макету  135px в vh. 10 - это размер шрифта в HTML (переделать в переменную и брать из CSS!!!)\n            footer.style.height = `${100 * (13.5 * 10) / window.innerHeight}vh`;\n        }, 500);\n    } else {\n        // если высота экрана больше высоты блока с фоном (ordering) - только центрируем и вешаем однократный листнер - на случай увеличения высоты экрана (окна браузера) или повторного наведени после скролла\n        ordering.scrollIntoView({ block: \"center\" });\n        orderingImgCont.addEventListener('mouseenter', enterFullscreenSection, { once: true });\n    }\n}\n\n// вешаем первоначальный однократный листнер для разворачивания блока с фоном (ordering)\norderingImgCont.addEventListener('mouseenter', enterFullscreenSection, { once: true });\n\nfunction exitFullscreenSection() {\n    //  для возможности прокрутки блока с фоном в центр экрана (на больших экранах) - после мгновенного сворачивания блока-обёртки блока с фоном - мгоувеличение футера - \n    footer.style.transition = '0.5s';\n    footer.style.height = '22.5vh';\n\n    // возвращаем плавность скролла (на случай, если пользователь скроллил страницу с развернуым блоком с фоном)\n    html.style.scrollBehavior = 'smooth';\n\n    // задаём \"нулевую\" (16 мс = 1fps 60Hz) задержку чтобы сработало html.style.scrollBehavior = 'smooth'; - плавность скролла  - нужно было при разработке - сейчас - не требуется\n    // setTimeout(() => {\n    //прокручиваем блоком с фоном в центр экрана\n    orderingOuter.scrollIntoView({ block: \"center\" });\n\n    //задаём отсрочку в 0.5 секунды чтобы страница успела проскроллиться до блока с фоном (ordering) и/или отыгралась анимация увеличения картинки, после этого делаем анимацию разворачивания\n    setTimeout(() => {\n        // убираем высоту на весь экран у блока с фоном - происходит с анимацией за счёт transition \n        ordering.style.removeProperty('height');\n        // делаём фоновую картинку обратно более блёклой\n        ordering.style.backgroundColor = 'rgba(240, 237, 243, 0.99)';\n\n        // вешаем  однократный листнер для разворачивания блока с фоном (ordering)\n        orderingImgCont.addEventListener('mouseenter', enterFullscreenSection, { once: true });\n\n        // не требуется запрещать полдьзователю скролл страницы - глюков нет\n        // document.body.style.overflow = 'hidden';\n\n        // делаем задержку на время анимации сворачивания блока с фоном\n        setTimeout(() => {\n            // убираем плавность прокрутки (скроллинга) страницы, сворачиваем блок-обёртку и скроллим блок с фоном (ordering) в центр - все эти (три) действия происходят мгновенно - пользователь видит на экране только исчезание контента соседних блоков (в том числе за счёт одинакового цвета фона блока-обёртки и соседних блоков) \n            html.style.scrollBehavior = 'auto';\n            orderingOuter.style.removeProperty('height');\n            ordering.scrollIntoView({ block: \"center\" });\n\n            // footer.style.height = '13.5rem';\n            // возвращаем футер к нормальному размеру, пересчитывая высоту по макету  135px в vh. 10 - это размер шрифта в HTML (переделать в переменную и брать из CSS!!!)\n            footer.style.height = `${100 * (13.5 * 10) / window.innerHeight}vh`;\n\n            // возвращаем плавность скролла - для дальнейшего просмотра сайта\n            html.style.scrollBehavior = 'smooth';\n        }, 500);\n    }, 500);\n    // }, 16);\n}\n\n// orderingImgCont.addEventListener('mouseleave', exitFullscreenSection);\n\n"]}