@import './utils';
@import './components/';

.wrapper {
    max-width: 120rem;
    margin: 0 auto;
    background-color: beige
}

.h1 {
    @include h1();
}

.h2 {
    @include h2()
}



.main__logo {
    // задаём ширину блока в процентах (%) зависимости от ширины родителя (т.е. wrapper-а). Также можно задать ширину блока в зависимости от ширины viewport - т.е. через vw. Для больших экранов, когда ширина экрана больше ширины  wrapper-а - ограничиваем макс. ширину блока с помощью max-width: 54.5rem; Также можно через медиа-запрос @media (min-width: 1200px)  просто задать ширину блока для больших экранов.
    width: calc(100% * 545 / 1200);
    // width: calc(100vw * 545 / 1200)
    // max-width: 54.5rem;

    // задаём высоту блока в зависимости от ширины viewport - т.е. через vw - т.к. в задание в процентах от родителя - не работает. Для больших экранов, когда ширина экрана больше ширины  wrapper-а - ограничиваем макс. высоту блока с помощью max-height: 54.2rem. Также можно через медиа-запрос @media (min-width: 1200px)  просто задать высоту блока для больших экранов.
    height: calc(100vw * 542 / 1200);
    max-height: 54.2rem;
    background: url(../images/main.jpg) no-repeat;
    background-size: cover;

    // Два следующих свойства позволяют сделать текст с фоновой картинкой. Т.е. текст делается прозрачным и фон блока-родителя отображается только по границам букв текста.
    -webkit-text-fill-color: transparent;
    -webkit-background-clip: text;

    // задаём чтобы работали отрицательные margin у детей - т.е блоков с буквами. position и transform применить для расположения букв в данном случае нельзя т.к. они "вмешиваются" в поток и не будет работать обрезка фона по буквам текста.
    display: flex;


    &-letter {
        display: block;
        font-family: 'PT Sans';
        font-style: normal;
        font-weight: 700;

        color: #fff;
        // font-size: calc(132vw * 542 / 1200);
        // Т.к. нужен адаптивный размер букв - задаём размер шрифта в зависимости от ширины viewport (в зависимости от родителя - т.е. в процентах (%) задать размер шрифта нельзя - не работает). Для больших экранов, когда ширина экрана больше ширины  wrapper-а (1200px) можно  или через медиа-запрос @media (min-width: 1200px) просто задать размер шрифта для больших экранов или сделать сразу адаптивно через функцию min(). 
        font-size: min(calc(132vw * 542 / 1200), 71.5rem);
        // font-size: 71.5rem;

        margin-top: -38.0%;
        margin-left: -5.3%;

        flex-shrink: 0;
        user-select: none;

        &_m {
            // font-size: calc(100vw * 276 / 1200);
            font-size: min(calc(100vw * 276 / 1200), 27.6rem);
            margin-top: 11%;
            margin-left: -42.4%;
        }

        &_t {
            // font-size: min(calc(132vw * 336 / 1200), 54.4rem);
            font-size: min(calc(100vw * 480 / 1200), 48rem);
            // font-size: 46rem;
            margin-top: -13%;
            margin-left: 1.0%;

        }
    }
}

// .test-bg-text {
//     @include h1();
//     background: url(../images/main.png);
//     background-size: cover;
//     background-position: 50% 50%;
//     -webkit-text-fill-color: transparent;
//     -webkit-background-clip: text;
//     width: fit-content;
//     font-size: 20vw !important;
// }