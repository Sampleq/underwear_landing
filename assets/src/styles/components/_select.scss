.select {
    &-wrapper {



        width: 100%;
        max-width: 30rem;

        @media ($mobileM) {
            max-width: 32rem;
        }

        position: relative;

        &::after {
            content: '';
            position: absolute;
            //z-index: -10; // при нажатии на псевдоэлемент select-wrapper-а - не раскрывается список выбора  - убираем иконку на задний план
            pointer-events: none; //  отключаем у псевдоэлемента взаимодействие с мышкой, иначе при клике на него выпадающий список раскрываться не будет. (тогда не нужно задавать отрицательный z-index и делать прозрачность самому select-у)
            right: 2.5rem;
            top: calc(50% - (1.6rem / 2));
            display: block;
            width: 1.6rem;
            height: 1.6rem;
            background: url(../images/arrow-select.svg) no-repeat;
            background-size: 100%;
            transition: 0.3s;
        }

        &:hover::after {
            transform: scale(1.15);
            filter: brightness(0.7);
        }
    }


    display: block;
    width: 100%;
    border: 0.1rem solid $borderColor;
    padding: 1.9rem 2.3rem;

    @media ($mobileM) {
        padding: 2.1rem 2.5rem;
    }

    @include p1();
    color: $textColor;

    cursor: pointer;
    // background-color: transparent; // без прозрачного фона select загораживает иконку из псевдоэлемента select-wrapper-а. 
    // не нужно задавать прозрачный фон, т.к. мы не переносим "галочку" на задний план, а отключаем событие клика на ней с помощью pointer-events: none; 

    appearance: none; // убираем стандартное для браузера.платформы оформление элемента. в данном случае убираем "галочку" по умолчанию.
    -webkit-appearance: none;
    -moz-appearance: none; // не работает в  Firefox
    //background-color: transparent; //  принудительно задаём фон для Firefox

    background-color: transparentize($color: $pinkRed, $amount: 0.871);
    border: 0.1rem solid darken($color: $borderColor, $amount: 10%);

    &:hover {
        border: 0.1rem solid darken($color: $borderColor, $amount: 20%);
        background-color: transparentize($color: $pinkRed, $amount: 0.851);
    }

    &:focus {
        // outline: 0.1rem solid darken($color: $borderColor, $amount: 20%);
        outline: none;
        border: 0.1rem solid darken($color: $borderColor, $amount: 20%);
    }

    // :required - не обязательно
    // &:required:invalid {
    //     color: $inputColor;
    // }

    &:invalid {
        color: $inputColor;
    }



    // Скрываем опцию которая служит нам плейсхолдером - применяется после того, как мы выберем какую-то опцию - не работает в Safari на MacOS и iOS ((
    option[value=""][disabled] {
        display: none;
    }

    //Проще просто использовать аттрибут  hidden тега <option> - тоже не работает в Safari на MacOS и iOS ((
}



// Выпадающий список — это один из элементов формы, почти не поддающийся стилизации. Мы можем немного изменить внешний вид самого элемента <select>, но стилизовать выпадающий список опций можно не для всех браузеров. Многие дизайнеры любят рисовать нестандартные выпадающие списки в угоду красоте, но реализация таких списков очень трудоёмка на чистом HTML и CSS. Рекомендуется для выпадающих списков оставлять родной вид, потому что такие списки обладают рядом преимуществ перед нестандартными. Например, выпадающий список опций может выходить за границы окна браузера, не давая пользователю возможность выбрать нужный элемент.

// https://doka.guide/html/select/ 

// How TO - Custom Select Box
// https://www.w3schools.com/howto/howto_custom_select.asp

// code for Custom Select Box (может выходить за границы окна браузера, появляется прокрутка)
// https://www.w3schools.com/howto/tryit.asp?filename=tryhow_custom_select